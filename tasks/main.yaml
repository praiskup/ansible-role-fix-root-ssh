---
- set_fact: check_hostname="{{ ansible_host }}"

- name: detect username and ssh-availability
  local_action: shell "{{ role_path }}/scripts/wait-for-ssh" --timeout 300 --check-cloud-user --print-user "{{ check_hostname }}"
  register: remote_user_name

- name: detect python to use
  raw: |
      try='/usr/bin/python /usr/bin/python3 /usr/bin/python2 /usr/libexec/platform-python'
      for p in $try; do
          test -e "$p" && echo "$p" && exit 0
      done
      exit 1
  register: use_python
  vars:
      # hack for https://github.com/ansible/proposals/issues/89
      ansible_user: "{{ remote_user_name.stdout_lines[0] }}"

- set_fact: our_python={{ use_python.stdout }}

- name: allow root ssh connections
  lineinfile:
    path: /etc/cloud/cloud.cfg
    regexp: '^disable_root:'
    line: 'disable_root: 0'
  remote_user: "{{ remote_user_name.stdout_lines[0] }}"
  become: true
  become_user: root
  vars:
      # hack for https://github.com/ansible/proposals/issues/89
      ansible_user: "{{ remote_user_name.stdout_lines[0] }}"
      ansible_python_interpreter: "{{ our_python }}"

- name: use the same authorized_keys
  replace:
    path: /root/.ssh/authorized_keys
    regexp: '.*Please login as the user.* ssh-rsa '
    replace: 'ssh-rsa '
    backup: yes
  remote_user: "{{ remote_user_name.stdout_lines[0] }}"
  become: true
  become_user: root
  vars:
      # hack for https://github.com/ansible/proposals/issues/89
      ansible_user: "{{ remote_user_name.stdout_lines[0] }}"
      ansible_python_interpreter: "{{ our_python }}"

# Make sure that connection caches are re-set after executing this task.yml
# file, otherwise ansible becomes confused and doesn't respect the global
# configuration correctly.
- meta: reset_connection
